{"version":3,"sources":["components/Display.js","components/InputLong.js","components/InputShort.js","components/InputEducation.js","components/InputWork.js","components/Input.js","App.js","index.js"],"names":["Display","props","className","cvData","general","name","value","location","mobile","email","profile","statement","experience","map","job","position","dateFrom","dateTo","jobTasks","id","education","item","schoolName","subject","summary","skills","skill","InputLong","onSubmit","handleSubmit","propertyCategory","propertyValue","inputData","onChange","handleChange","type","InputShort","InputEducation","multiSubmit","educationArray","onClick","handleDelete","InputWork","experienceArray","Input","App","useState","inputs","uniqid","setInputs","setCvData","window","print","e","target","dataset","category","preventDefault","concat","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uXA4DeA,EAxDC,SAACC,GACb,OACE,sBAAKC,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,6BAAKD,EAAME,OAAOC,QAAQC,KAAKC,QAC/B,8BACE,+CADF,IAC8BL,EAAME,OAAOC,QAAQG,SAASD,MAD5D,IAEG,6CAFH,KAE8BL,EAAME,OAAOC,QAAQI,OAAOF,MAF1D,IAGG,4CAHH,IAG4BL,EAAME,OAAOC,QAAQK,MAAMH,YAIzD,sBAAKJ,UAAU,UAAf,UACE,kDACA,4BAAID,EAAME,OAAOO,QAAQC,UAAUL,WAGrC,sBAAKJ,UAAU,aAAf,UACE,iDACA,6BACGD,EAAME,OAAOS,WAAWC,KAAI,SAAAC,GAC3B,OACE,+BACE,6BAAKA,EAAIT,KAAKC,QACd,+BAAKQ,EAAIC,SAAST,MAAlB,KAA2BQ,EAAIE,SAASV,MAAxC,OAAmDQ,EAAIG,OAAOX,MAA9D,OACA,4BAAIQ,EAAII,SAASZ,UAHVQ,EAAIK,YAUrB,sBAAKjB,UAAU,YAAf,UACE,2CACA,6BACGD,EAAME,OAAOiB,UAAUP,KAAI,SAAAQ,GAC1B,OACE,+BACE,6BAAKA,EAAKC,WAAWhB,QACrB,+BAAKe,EAAKE,QAAQjB,MAAlB,KAA2Be,EAAKL,SAASV,MAAzC,OAAoDe,EAAKJ,OAAOX,MAAhE,OACA,4BAAIe,EAAKG,QAAQlB,UAHVe,EAAKF,YAUtB,sBAAKjB,UAAU,QAAf,UACE,sDACA,4BAAID,EAAME,OAAOsB,OAAOC,MAAMpB,eCjCzBqB,G,MAhBG,SAAC1B,GACf,OACE,qBAAKC,UAAU,YAAf,SACE,uBAAM0B,SAAU3B,EAAM4B,aAAc,gBAAe5B,EAAM6B,iBAAkB,aAAY7B,EAAM8B,cAA7F,UACE,0BACE,gBAAe9B,EAAM6B,iBACrB,aAAY7B,EAAM8B,cAClBzB,MAAOL,EAAM+B,UAAU/B,EAAM6B,kBAAkB7B,EAAM8B,eAAezB,MACpE2B,SAAUhC,EAAMiC,eAElB,uBAAOhC,UAAU,SAASiC,KAAK,SAAS7B,MAAM,kBCgBzC8B,G,MA1BI,SAACnC,GAClB,OACE,qBAAKC,UAAU,aAAf,SACI,uBACEA,UAAU,aACV0B,SAAU3B,EAAM4B,aAChB,gBAAe5B,EAAM6B,iBACrB,aAAY7B,EAAM8B,cAJpB,UAME,uBACEI,KAAK,OACL,gBAAelC,EAAM6B,iBACrB,aAAY7B,EAAM8B,cAClBzB,MAAOL,EAAM+B,UAAU/B,EAAM6B,kBAAkB7B,EAAM8B,eAAezB,MACpE2B,SAAUhC,EAAMiC,eAElB,uBACEhC,UAAU,SACViC,KAAK,SACL7B,MAAM,kBCoDH+B,G,MAnEQ,SAACpC,GACpB,OACE,sBAAKC,UAAU,iBAAf,UACE,uBAAM0B,SAAU3B,EAAMqC,YAAa,gBAAc,YAAjD,UACE,sBAAKpC,UAAU,iBAAf,UACE,uBACEiC,KAAK,OACL,gBAAc,YACd,aAAW,aACX7B,MAAOL,EAAM+B,UAAUZ,UAAUE,WAAWhB,MAC5C2B,SAAUhC,EAAMiC,eAElB,uBACEC,KAAK,OACL,gBAAc,YACd,aAAW,UACX7B,MAAOL,EAAM+B,UAAUZ,UAAUG,QAAQjB,MACzC2B,SAAUhC,EAAMiC,kBAGpB,sBAAKhC,UAAU,QAAf,UACE,0CAEE,uBACE,gBAAc,YACd,aAAW,WACXiC,KAAK,OACL7B,MAAOL,EAAM+B,UAAUZ,UAAUJ,SAASV,MAC1C2B,SAAUhC,EAAMiC,kBAGpB,wCAEE,uBACE,gBAAc,YACd,aAAW,SACXC,KAAK,OACL7B,MAAOL,EAAM+B,UAAUZ,UAAUH,OAAOX,MACxC2B,SAAUhC,EAAMiC,qBAKtB,0BACE,gBAAc,YACd,aAAW,UACX5B,MAAOL,EAAM+B,UAAUZ,UAAUI,QAAQlB,MACzC2B,SAAUhC,EAAMiC,eAElB,uBAAOC,KAAK,SAAS7B,MAAM,MAAMJ,UAAU,kBAE7C,6BACGD,EAAMsC,eAAe1B,KAAI,SAAAQ,GACxB,OACE,+BACGA,EAAKC,WAAWhB,MACjB,wBAAQJ,UAAU,SAAS,gBAAc,YAAY,UAASmB,EAAKF,GAAIqB,QAASvC,EAAMwC,aAAtF,sBAFOpB,EAAKF,cCSbuB,G,MAnEG,SAACzC,GACf,OACE,sBAAKC,UAAU,YAAf,UACE,uBAAM0B,SAAU3B,EAAMqC,YAAa,gBAAc,aAAjD,UACE,sBAAKpC,UAAU,kBAAf,UACE,uBACEiC,KAAK,OACL,gBAAc,aACd,aAAW,OACX7B,MAAOL,EAAM+B,UAAUpB,WAAWP,KAAKC,MACvC2B,SAAUhC,EAAMiC,eAElB,uBACEC,KAAK,OACL,gBAAc,aACd,aAAW,WACX7B,MAAOL,EAAM+B,UAAUpB,WAAWG,SAAST,MAC3C2B,SAAUhC,EAAMiC,kBAGpB,sBAAKhC,UAAU,QAAf,UACE,0CAEE,uBACE,gBAAc,aACd,aAAW,WACXiC,KAAK,OACL7B,MAAOL,EAAM+B,UAAUpB,WAAWI,SAASV,MAC3C2B,SAAUhC,EAAMiC,kBAGpB,wCAEE,uBACE,gBAAc,aACd,aAAW,SACXC,KAAK,OACL7B,MAAOL,EAAM+B,UAAUpB,WAAWK,OAAOX,MACzC2B,SAAUhC,EAAMiC,qBAKtB,0BACE,gBAAc,aACd,aAAW,WACX5B,MAAOL,EAAM+B,UAAUpB,WAAWM,SAASZ,MAC3C2B,SAAUhC,EAAMiC,eAElB,uBAAOC,KAAK,SAAS7B,MAAM,MAAMJ,UAAU,kBAE7C,6BACGD,EAAM0C,gBAAgB9B,KAAI,SAAAQ,GACzB,OACE,+BACGA,EAAKhB,KAAKC,MACX,wBAAQJ,UAAU,SAAS,gBAAc,aAAa,UAASmB,EAAKF,GAAIqB,QAASvC,EAAMwC,aAAvF,sBAFOpB,EAAKF,cCgBbyB,G,MAlED,SAAC3C,GACX,OACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEgC,aAAcjC,EAAMiC,aACpBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,UACjBC,cAAc,SAEhB,cAAC,EAAD,CACEG,aAAcjC,EAAMiC,aACpBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,UACjBC,cAAc,aAEhB,cAAC,EAAD,CACEG,aAAcjC,EAAMiC,aACpBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,UACjBC,cAAc,WAEhB,cAAC,EAAD,CACEG,aAAcjC,EAAMiC,aACpBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,UACjBC,cAAc,aAIlB,cAAC,EAAD,CACEG,aAAcjC,EAAMiC,aACpBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,UACjBC,cAAc,cAEhB,cAAC,EAAD,CACEG,aAAejC,EAAMiC,aACrBL,aAAc5B,EAAM4B,aACpBG,UAAW/B,EAAM+B,UACjBF,iBAAiB,SACjBC,cAAc,UAEhB,cAAC,EAAD,CACAG,aAAcjC,EAAMiC,aACpBI,YAAarC,EAAMqC,YACnBG,aAAcxC,EAAMwC,aACpBT,UAAW/B,EAAM+B,UACjBO,eAAgBtC,EAAMsC,iBAEtB,cAAC,EAAD,CACAL,aAAcjC,EAAMiC,aACpBI,YAAarC,EAAMqC,YACnBG,aAAcxC,EAAMwC,aACpBT,UAAW/B,EAAM+B,UACjBW,gBAAiB1C,EAAM0C,uBCsLhBE,EAlPH,SAAC5C,GAEX,MAA4B6C,mBAAS,CACnCC,OAAQ,CACN3C,QAAS,CACPC,KAAK,CACHC,MAAM,QAERC,SAAS,CACPD,MAAM,YAERE,OAAO,CACLF,MAAM,iBAERG,MAAM,CACJH,MAAM,kBAGVI,QAAQ,CACNC,UAAU,CACRL,MAAM,wCAGVM,WAAW,CACTO,GAAI6B,MACJ3C,KAAK,CACHC,MAAM,gBAERS,SAAS,CACPT,MAAM,aAERY,SAAS,CACPZ,MAAM,mBAERU,SAAS,CACLV,MAAM,IAEVW,OAAO,CACLX,MAAM,KAGVc,UAAU,CACRD,GAAG6B,MACH1B,WAAW,CACThB,MAAM,eAERiB,QAAQ,CACNjB,MAAM,WAERU,SAAS,CACPV,MAAM,IAERW,OAAO,CACLX,MAAM,IAERkB,QAAS,CACPlB,MAAM,YAGVmB,OAAQ,CACNC,MAAM,CACJpB,MAAM,6CA3Dd,mBAAOyC,EAAP,KAAeE,EAAf,KAiEA,EAA4BH,mBAAS,CACnC3C,OAAQ,CACNC,QAAQ,CACNC,KAAK,CACHC,MAAM,IAERC,SAAS,CACPD,MAAM,IAERE,OAAO,CACLF,MAAM,IAERG,MAAM,CACJH,MAAM,KAGVI,QAAQ,CACNC,UAAU,CACRL,MAAM,KAGVM,WAAW,GACXQ,UAAU,GACVK,OAAQ,CACNC,MAAM,CACJpB,MAAM,QAzBd,mBAAOH,EAAP,KAAe+C,EAAf,KA+IA,OACE,sBAAKhD,UAAU,MAAf,UACE,mCACE,2CACA,yBAAQsC,QARM,WAClBW,OAAOC,SAO2BlD,UAAU,SAAxC,UACE,0CACA,6DACA,4DAIJ,iCACE,cAAC,EAAD,CACEgC,aA7Ha,SAACmB,GAEpBJ,EAAU,CACRF,OAAO,2BACFA,EAAOA,QADN,kBAEHM,EAAEC,OAAOC,QAAQC,SAFd,2BAGCT,EAAOA,OAAOM,EAAEC,OAAOC,QAAQC,WAHhC,kBAIDH,EAAEC,OAAOC,QAAQjD,MAAQ,CACxBA,MAAM+C,EAAEC,OAAOhD,cAsHjBuB,aA/Ga,SAACwB,GACpBA,EAAEI,iBACFP,EAAU,CACR/C,OAAO,2BACFA,EAAOA,QADN,kBAEHkD,EAAEC,OAAOC,QAAQC,SAFd,2BAGCrD,EAAOA,OAAOkD,EAAEC,OAAOC,QAAQC,WAHhC,kBAIDH,EAAEC,OAAOC,QAAQjD,MAAO,CACvBA,MAAOyC,EAAOA,OAAOM,EAAEC,OAAOC,QAAQC,UAAUH,EAAEC,OAAOC,QAAQjD,OAAOA,cAwG1EgC,YAtFY,SAACe,GACnBA,EAAEI,iBACgC,cAA9BJ,EAAEC,OAAOC,QAAQC,UACnBN,EAAU,CACR/C,OAAO,2BACFA,EAAOA,QADN,IAEJiB,UAAUjB,EAAOA,OAAOiB,UAAUsC,OAChCX,EAAOA,OAAO3B,eAIpB6B,EAAU,CACRF,OAAO,2BACFA,EAAOA,QADN,IAEJ3B,UAAU,CACRD,GAAI6B,MACJ1B,WAAW,CACThB,MAAM,eAERiB,QAAQ,CACNjB,MAAM,WAERU,SAAS,CACPV,MAAM,IAERW,OAAO,CACLX,MAAM,IAERkB,QAAS,CACPlB,MAAM,iBAKyB,eAA9B+C,EAAEC,OAAOC,QAAQC,WAC1BN,EAAU,CACR/C,OAAO,2BACFA,EAAOA,QADN,IAEJS,WAAWT,EAAOA,OAAOS,WAAW8C,OAAOX,EAAOA,OAAOnC,gBAG3DqC,EAAU,CACRF,OAAO,2BACFA,EAAOA,QADN,IAEJnC,WAAW,CACTO,GAAI6B,MACJ3C,KAAK,CACHC,MAAM,gBAERS,SAAS,CACPT,MAAM,aAERU,SAAS,CACPV,MAAM,IAERW,OAAO,CACLX,MAAM,IAERY,SAAU,CACRZ,MAAM,0BA4BZmC,aAlGa,SAACY,GACpBH,EAAU,CACR/C,OAAO,2BACFA,EAAOA,QADN,kBAEHkD,EAAEC,OAAOC,QAAQC,SAAWrD,EAAOA,OAAOkD,EAAEC,OAAOC,QAAQC,UAAUG,QAAO,SAAAtC,GAC3E,OAAOA,EAAKF,KAAOkC,EAAEC,OAAOC,QAAQpC,WA8FpCa,UAAWe,EAAOA,OAClBR,eAAgBpC,EAAOA,OAAOiB,UAC9BuB,gBAAiBxC,EAAOA,OAAOS,WAC/BV,UAAU,UAEZ,cAAC,EAAD,CAASC,OAAQA,EAAOA,OAAQD,UAAU,eAG5C,+DC9ON0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a49cb09f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport '../styles/Display.css'\n\nconst Display = (props) => {\n    return (\n      <div className=\"Display\">\n        <div className=\"general\">\n          <h1>{props.cvData.general.name.value}</h1>\n          <p>\n            <strong>Location:</strong> {props.cvData.general.location.value} \n            |<strong>Mobile:</strong>  {props.cvData.general.mobile.value}\n            |<strong>Email:</strong> {props.cvData.general.email.value}\n          </p>\n        </div>\n\n        <div className=\"profile\">\n          <h2>Personal Profile</h2>\n          <p>{props.cvData.profile.statement.value}</p>\n        </div>\n\n        <div className=\"experience\">\n          <h2>Work Experience</h2>\n          <ul>\n            {props.cvData.experience.map(job => {\n              return (\n                <li key={job.id}>\n                  <h4>{job.name.value}</h4>\n                  <h5>{job.position.value} ({job.dateFrom.value} to {job.dateTo.value})</h5>\n                  <p>{job.jobTasks.value}</p>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n\n        <div className=\"education\">\n          <h2>Education</h2>\n          <ul>\n            {props.cvData.education.map(item => {\n              return (\n                <li key={item.id}>\n                  <h4>{item.schoolName.value}</h4>\n                  <h5>{item.subject.value} ({item.dateFrom.value} to {item.dateTo.value})</h5>\n                  <p>{item.summary.value}</p>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n\n        <div className=\"about\">\n          <h2>Skills and Languages</h2>\n          <p>{props.cvData.skills.skill.value}</p>\n        </div>\n\n      </div>\n    )\n  }\n\nexport default Display","import React from 'react'\n\nimport '../styles/InputLong.css'\n\nconst InputLong = (props) => {\n    return (\n      <div className=\"InputLong\">\n        <form onSubmit={props.handleSubmit} data-category={props.propertyCategory} data-value={props.propertyValue}>\n          <textarea \n            data-category={props.propertyCategory}\n            data-value={props.propertyValue}\n            value={props.inputData[props.propertyCategory][props.propertyValue].value} \n            onChange={props.handleChange} \n          />\n          <input className=\"button\" type=\"submit\" value=\"Update\" />\n        </form>\n      </div>\n    )\n  }\n\nexport default InputLong","import React from 'react'\n\nimport '../styles/InputShort.css'\n\nconst InputShort = (props) => {\n  return (\n    <div className=\"InputShort\">\n        <form \n          className=\"input-form\" \n          onSubmit={props.handleSubmit} \n          data-category={props.propertyCategory} \n          data-value={props.propertyValue}\n        >\n          <input \n            type=\"text\" \n            data-category={props.propertyCategory}\n            data-value={props.propertyValue}\n            value={props.inputData[props.propertyCategory][props.propertyValue].value} \n            onChange={props.handleChange} \n          />\n          <input \n            className=\"button\"\n            type=\"submit\" \n            value=\"Update\" \n          />\n        </form>\n      </div>\n  )\n}\n\nexport default InputShort\n","import React from 'react'\n\nimport '../styles/InputEducation.css'\n/* \nEven though InputWork and InputEducation are similar I took the decision to split them into two modules as\nmaking a general component work with both would require a large amount of props. May refactor later.\n*/\n\nconst InputEducation = (props) => {\n    return (\n      <div className=\"InputEducation\">\n        <form onSubmit={props.multiSubmit} data-category=\"education\">\n          <div className=\"school-subject\">\n            <input \n              type=\"text\" \n              data-category=\"education\"\n              data-value=\"schoolName\"\n              value={props.inputData.education.schoolName.value} \n              onChange={props.handleChange}\n            />\n            <input \n              type=\"text\" \n              data-category=\"education\"\n              data-value=\"subject\"\n              value={props.inputData.education.subject.value}\n              onChange={props.handleChange}\n            />\n          </div>    \n          <div className=\"dates\">\n            <label>\n              From:\n              <input \n                data-category=\"education\"\n                data-value=\"dateFrom\"\n                type=\"date\" \n                value={props.inputData.education.dateFrom.value}\n                onChange={props.handleChange}\n              />\n            </label>\n            <label>\n              To:\n              <input \n                data-category=\"education\"\n                data-value=\"dateTo\"\n                type=\"date\" \n                value={props.inputData.education.dateTo.value}\n                onChange={props.handleChange}\n              />\n            </label>\n          </div>\n\n          <textarea \n            data-category=\"education\"\n            data-value=\"summary\"\n            value={props.inputData.education.summary.value}\n            onChange={props.handleChange}\n          />\n          <input type=\"submit\" value=\"Add\" className=\"add button\" />\n        </form>\n        <ul>\n          {props.educationArray.map(item => {\n            return (\n              <li key={item.id}>\n                {item.schoolName.value}\n                <button className=\"button\" data-category=\"education\" data-id={item.id} onClick={props.handleDelete}>\n                  Delete\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n\nexport default InputEducation","import React from 'react'\n\nimport '../styles/InputWork.css'\n\nconst InputWork = (props) => {\n    return (\n      <div className=\"InputWork\">\n        <form onSubmit={props.multiSubmit} data-category=\"experience\">\n          <div className=\"company-details\">\n            <input \n              type=\"text\" \n              data-category=\"experience\"\n              data-value=\"name\"\n              value={props.inputData.experience.name.value} \n              onChange={props.handleChange}\n            />\n            <input \n              type=\"text\" \n              data-category=\"experience\"\n              data-value=\"position\"\n              value={props.inputData.experience.position.value}\n              onChange={props.handleChange}\n            />\n          </div>\n          <div className=\"dates\">\n            <label>\n              From:\n              <input \n                data-category=\"experience\"\n                data-value=\"dateFrom\"\n                type=\"date\" \n                value={props.inputData.experience.dateFrom.value}\n                onChange={props.handleChange}\n              />\n            </label>\n            <label>\n              To:\n              <input \n                data-category=\"experience\"\n                data-value=\"dateTo\"\n                type=\"date\" \n                value={props.inputData.experience.dateTo.value}\n                onChange={props.handleChange}\n              />\n            </label>\n          </div>\n          \n          <textarea \n            data-category=\"experience\"\n            data-value=\"jobTasks\"\n            value={props.inputData.experience.jobTasks.value}\n            onChange={props.handleChange}\n          />\n          <input type=\"submit\" value=\"Add\" className=\"add button\" />\n        </form>\n        <ul>\n          {props.experienceArray.map(item => {\n            return (\n              <li key={item.id}>\n                {item.name.value}\n                <button className=\"button\" data-category=\"experience\" data-id={item.id} onClick={props.handleDelete}>\n                  Delete\n                </button>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n    )\n  }\n\nexport default InputWork","import React from 'react'\n\nimport InputLong from './InputLong';\nimport InputShort from './InputShort';\nimport InputEducation from './InputEducation';\nimport InputWork from './InputWork'\nimport '../styles/Input.css'\n\nconst Input = (props) => {\n    return (\n      <div className=\"Input\">\n        <div className=\"general-info\">\n          <InputShort \n            handleChange={props.handleChange} \n            handleSubmit={props.handleSubmit} \n            inputData={props.inputData}  \n            propertyCategory=\"general\" \n            propertyValue=\"name\"\n          />\n          <InputShort \n            handleChange={props.handleChange} \n            handleSubmit={props.handleSubmit} \n            inputData={props.inputData}  \n            propertyCategory=\"general\" \n            propertyValue=\"location\"\n          />\n          <InputShort \n            handleChange={props.handleChange} \n            handleSubmit={props.handleSubmit} \n            inputData={props.inputData}  \n            propertyCategory=\"general\" \n            propertyValue=\"mobile\"\n          />\n          <InputShort \n            handleChange={props.handleChange} \n            handleSubmit={props.handleSubmit} \n            inputData={props.inputData}  \n            propertyCategory=\"general\" \n            propertyValue=\"email\"\n          />\n        </div>\n\n        <InputLong \n          handleChange={props.handleChange} \n          handleSubmit={props.handleSubmit} \n          inputData={props.inputData}  \n          propertyCategory=\"profile\" \n          propertyValue=\"statement\"\n        />\n        <InputLong \n          handleChange= {props.handleChange} \n          handleSubmit={props.handleSubmit} \n          inputData={props.inputData}  \n          propertyCategory=\"skills\" \n          propertyValue=\"skill\"\n        />\n        <InputEducation\n        handleChange={props.handleChange} \n        multiSubmit={props.multiSubmit}\n        handleDelete={props.handleDelete}\n        inputData={props.inputData}\n        educationArray={props.educationArray}  \n        />\n        <InputWork\n        handleChange={props.handleChange} \n        multiSubmit={props.multiSubmit}\n        handleDelete={props.handleDelete}\n        inputData={props.inputData}  \n        experienceArray={props.experienceArray}\n        />\n      </div>\n    )\n  }\n\nexport default Input","import React, { useState } from 'react';\nimport uniqid from 'uniqid'\n\nimport './App.css';\nimport Display from './components/Display';\nimport Input from './components/Input';\n\n\nconst App = (props) => {\n\n  const [inputs, setInputs] = useState({\n    inputs: {\n      general: {\n        name:{\n          value:'Name'\n        },\n        location:{\n          value:'Location'\n        },\n        mobile:{\n          value:'Mobile Number'\n        },\n        email:{\n          value:'Email Address'\n        }\n      },\n      profile:{\n        statement:{\n          value:'Write your personal statement here.'\n        }\n      },\n      experience:{\n        id: uniqid(),\n        name:{\n          value:'Company Name'\n        },\n        position:{\n          value:'Job Title'\n        },\n        jobTasks:{\n          value:'Job Description'\n        },\n        dateFrom:{\n            value:''\n        },\n        dateTo:{\n          value:''\n        }\n      },\n      education:{\n        id:uniqid(),\n        schoolName:{\n          value:'School Name'\n        },\n        subject:{\n          value:'Subject'\n        },\n        dateFrom:{\n          value:''\n        },\n        dateTo:{\n          value:''\n        },\n        summary: {\n          value:'Summary'\n        }\n      },\n      skills: {\n        skill:{\n          value:'Write your skills and languages here.'\n        }\n      }\n    },\n  });\n\n  const [cvData, setCvData] = useState({\n    cvData: {\n      general:{\n        name:{\n          value:''\n        },\n        location:{\n          value:''\n        },\n        mobile:{\n          value:''\n        },\n        email:{\n          value:''\n        }\n      },\n      profile:{\n        statement:{\n          value:''\n        }\n      },\n      experience:[],\n      education:[],\n      skills: {\n        skill:{\n          value:''\n        }\n      }\n    }\n  });\n\n  const handleChange = (e) => {\n    // Use data-attributes so handleChange can be used for modifying any state property. \n    setInputs({\n      inputs:{\n        ...inputs.inputs,\n        [e.target.dataset.category]: {\n          ...inputs.inputs[e.target.dataset.category],\n          [e.target.dataset.value]: {\n            value:e.target.value\n          }  \n        }\n      }\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCvData({\n      cvData: {\n        ...cvData.cvData,\n        [e.target.dataset.category]:{\n          ...cvData.cvData[e.target.dataset.category],\n          [e.target.dataset.value]:{\n            value:(inputs.inputs[e.target.dataset.category][e.target.dataset.value].value)\n          }\n        }\n      }\n    });\n  }\n\n  const handleDelete = (e) => {\n    setCvData({\n      cvData:{\n        ...cvData.cvData,\n        [e.target.dataset.category]: cvData.cvData[e.target.dataset.category].filter(item => {\n          return item.id !== e.target.dataset.id\n        })\n      }\n    });\n  }\n\n  const multiSubmit = (e) => {\n    e.preventDefault()\n    if (e.target.dataset.category === \"education\") {\n      setCvData({\n        cvData:{\n          ...cvData.cvData,\n          education:cvData.cvData.education.concat(\n            inputs.inputs.education\n          )\n        }\n      });\n      setInputs({\n        inputs:{\n          ...inputs.inputs,\n          education:{\n            id: uniqid(),\n            schoolName:{\n              value:'School Name'\n            },\n            subject:{\n              value:'Subject'\n            },\n            dateFrom:{\n              value:''\n            },\n            dateTo:{\n              value:''\n            },\n            summary: {\n              value:'Summary',\n            }\n          }\n        }\n      });\n    } else if (e.target.dataset.category === \"experience\") {\n      setCvData({\n        cvData:{\n          ...cvData.cvData,\n          experience:cvData.cvData.experience.concat(inputs.inputs.experience)\n        }\n      });\n        setInputs({\n          inputs:{\n            ...inputs.inputs,\n            experience:{\n              id: uniqid(),\n              name:{\n                value:'Company Name'\n              },\n              position:{\n                value:'Job Title'\n              },\n              dateFrom:{\n                value:''\n              },\n              dateTo:{\n                value:''\n              },\n              jobTasks: {\n                value:'Job Description'\n              }\n            }\n          }\n        }) \n    }\n  }\n\n  const handlePrint = () => {\n    window.print()\n  }\n\n  return (\n    <div className=\"App\">\n      <header> \n        <div>CV-Maker</div>  \n        <button onClick={handlePrint} className=\"button\">\n          <h2>Print CV</h2>\n          <p>For PDF select \"Save to PDF\"</p> \n          <p>Set margins to \"None\"</p>\n        </button>\n      </header>\n\n      <main>\n        <Input \n          handleChange={handleChange} \n          handleSubmit={handleSubmit} \n          multiSubmit={multiSubmit}\n          handleDelete={handleDelete}\n          inputData={inputs.inputs} \n          educationArray={cvData.cvData.education}\n          experienceArray={cvData.cvData.experience}\n          className=\"Input\"\n        />\n        <Display cvData={cvData.cvData} className=\"Display\"/>\n      </main>\n\n      <footer>Made by James Spencer</footer>\n      \n    </div>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}